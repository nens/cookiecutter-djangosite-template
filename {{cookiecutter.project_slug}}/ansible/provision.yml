# Goal: do the root-related basic provisioning for a site (now: only this
# server). A buildout user is set up with ssh keys so that the relevant devs
# can ssh in as user buildout, which will be used by the deploy.yml script.
---
- name: provision server to prepare for the actual deployment
  hosts: web
  become: yes
  tasks:

    - name: Add user "buildout" and set an unusable password.
      user:
        name: buildout
        password: '*'
        state: present
        shell: "/bin/bash"

    - name: "Add maintainers' ssh keys so they can log in as user buildout."
      authorized_key:
        user: buildout
        key: https://github.com/{{ item }}.keys
      with_items:
        - !!TODO.fill.in.your.username

    - name: Install apt packages.
      apt: name={{ item }} state=latest
      with_items:
        - git
        - python3-dev
        - python3-pip
        - supervisor
        - nginx
        # - libgdal-dev   # if you need pygdal
        # - gdal-bin      # if you need gdal command line
        # - python-gdal   # if you need gdal command line python scripts

    - name: Upgrade setuptools, pip, and pipenv.
      pip: name={{ item }} extra_args="--upgrade"
      with_items:
        - setuptools
        - pip
        - pipenv

    - name: Create dir inside /srv for the checkout.
      file:
        path: {{ project_path }}
        state: directory
        mode: 0755
        owner: buildout
        group: buildout

    - name: "Look if nginx config already exists (you'll need to run deploy first!)"
      stat: path={{ project_path }}/etc/{{ site_name }}.nginx.conf
      register: nginx_conffile

    - name: Symlink nginx config, when available.
      file:
        src: {{ project_path }}/etc/{{ site_name }}.nginx.conf
        dest: /etc/nginx/sites-available/{{ site_name }}.nginx.conf
        state: link
      when: nginx_conffile.stat.exists

    - name: Enable nginx config, when available.
      file:
        src: /etc/nginx/sites-available/{{ site_name }}.nginx.conf
        dest: /etc/nginx/sites-enabled/{{ site_name }}.nginx.conf
        state: link
      when: nginx_conffile.stat.exists

    - name: Restart nginx.
      service: name=nginx state=reloaded
      when: nginx_conffile.stat.exists
