pipeline {
    agent any
    stages {
        stage("Checkout") {
            steps {
                checkout scm
                sh "mkdir -p var/static var/media var/log"
                sh "rm -rf .venv"
                sh "echo 'COMPOSE_PROJECT_NAME=${env.JOB_NAME}-${env.BUILD_ID}' > .env"
                sh "echo 'SSH_AUTH_SOCK=/tmp/fake_ssh_socket' >> .env"
                sh "echo UID=`id -u` >> .env"
                sh "docker --version; docker-compose --version"
            }
        }
        stage("Build") {
            steps {
                sh "docker-compose down --volumes"
                sh "docker-compose build web"
                sh "docker-compose run --rm web pipenv sync --dev"
                sh "docker-compose run --rm web pipenv run pip freeze"
                sh "docker-compose run --rm web pipenv check"
            }
        }
        stage("Test") {
            steps {
                sh "docker-compose run --rm web pipenv run python manage.py test"
                step $class: 'JUnitResultArchiver', testResults: 'nosetests.xml'
                publishHTML target: [reportDir: 'htmlcov', reportFiles: 'index.html', reportName: 'Coverage report']
                step([$class: 'CoberturaPublisher', coberturaReportFile: 'coverage.xml'])
            }
        }
        stage("Pep 8") {
            steps {
                sh "if docker-compose run --rm web pipenv run pep8 > pep8.txt; then echo 'pep8 is a success'; else cat pep8.txt; false; fi"
            }
        }
    }
    post {
        always {
            sh "docker-compose down --volumes --remove-orphans && docker-compose rm -f && rm -rf .venv"
        }
    }
}
